<h1>Blood test for <%= @blood_test.taken_on.strftime("%d %b %Y") %></h1>
<article class="main-content blood-test-report">
  <section class="danger">
    <header>
      <h1>Results Out of Range</h1>
    </header>
    <ul>
      <% BloodTestsHelper::TEST_NAMES.each do |method| %>
        <% unless @probe.within_range?(method) || @probe.empty_value?(method) %>
          <li>
            <span class="text"><%= BloodTestsHelper::HEADERS[method] %>: <%= @blood_test.send(method) %></span>
            <div id="bar-<%= method %>" class="bar-chart">
              <div></div>
              <div></div>
              <div></div>
              <div><p class="bar-popup"><%= @blood_test.send(method) %></p></div>
              <!-- <div /> -->
            </div>
          </li>
        <% end %>
      <% end %>
    </ul>
  </section>
  <section class="no-danger">
    <header>
      <h1>Results In Range</h1>
    </header>
    <% BloodTestsHelper::TEST_NAMES.each do |method| %>
      <% if @probe.within_range?(method) && !@probe.empty_value?(method) %>
        <p><%= BloodTestsHelper::HEADERS[method] %>: <%= @blood_test.send(method) %></p>
      <% end %>
    <% end %>
  </section>
</article>

<script src="http://d3js.org/d3.v3.js"></script>
<% BloodTestsHelper::TEST_NAMES.each do |method| %>
  <% unless @probe.within_range?(method) || @probe.empty_value?(method) || method == :crp %>
    <script>
      var max = <%= [ BloodProbe::RANGES[method].last + 10, @blood_test.send(method) + 10 ].sort.last %>;
      var upBound = <%= BloodProbe::RANGES[method].last %>;
      var lowBound = <%= BloodProbe::RANGES[method].first %>;
      var thisVal = <%= @blood_test.send(method) %>;
      // var lastVal = 35;

      function colourSelect(i) {
        if (i == 0 || i == 2) { return '#990000'; }
        else if (i == 1) { return '#009900'; }
        else { return 'rgba(0,0,0,0)'; }
      };

      function borderSelect(d,i) {
        if (i < 3) { return 'none'; }
        else if (i == 3) {
          return '4px solid rgba(255, 255, 255, 0.8)';
        } else {
          return '4px solid rgba(255, 255, 255, 0.4)';
        }
      };

      d3.selectAll('#bar-<%= method %> div')
        .data([max, upBound, lowBound, thisVal])
        .style("background-color", function(d,i) { return colourSelect(i) })
        .style("border-right", function(d,i) { return borderSelect(d,i) })
        .transition()
        .duration(1000)
        .delay(function(d,i) { if (i < 3) { return 1; } else { return 500; }})
        .style("width", function(d) {return (d * 100 / max) + '%'})
    </script>
  <% end %>
<% end %>
